/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "OLIMEX AM335x-SOM VoltServer ETX8";
	compatible = "olimex,am335x_som", "ti,am33xx";

	chosen {
		stdout-path = &uart0;
		tick-timer = &timer2;
	};

	leds: leds {
		compatible = "gpio-leds";
	};

  gpio_keys: gpio_keys {
		compatible = "gpio-keys";
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x20000000>; /* 512 MB */
	};

	dummy_reg: regulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "dummy_regulator";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};
};

&leds {
  pinctrl-names = "default";
  pinctrl-0 = <&usr_led_pins_default>, <&evb_leds_pins_default>;

  led@0 {
    label = "olimex-som:green:led1";
    gpios = <&gpio3 18 GPIO_ACTIVE_HIGH>;
    linux,default-trigger = "heartbeat";
    default-state = "off";
  };

  led@1 {
    label = "etx8:blue:led2"; // red on the Olimex EVB
    gpios = <&gpio3 20 GPIO_ACTIVE_HIGH>;
    linux,default-trigger = "none"; // "mmc0"
    default-state = "off";
  };

  led@2 {
    label = "etx8:green:led3"; // yellow on the Olimex EVB
    gpios = <&gpio3 21 GPIO_ACTIVE_HIGH>;
    linux,default-trigger = "heartbeat"; // "cpu0"
    default-state = "off";
  };
};
&am33xx_pinmux {
	usr_led_pins_default: usr_led_pins_default {
		pinctrl-single,pins = <
			0x1a0 ( PIN_OUTPUT | MUX_MODE7 ) /* (B12) mcasp0_aclkr.gpio3_18 */
		>;
	};

	evb_leds_pins_default: evb_leds_pins_default {
		pinctrl-single,pins = <
			0x1a8 ( PIN_OUTPUT | MUX_MODE7 ) /* (D13) mcasp0_axr1.gpio3_20 */
			0x1ac ( PIN_OUTPUT | MUX_MODE7 ) /* (A14) mcasp0_ahclkx.gpio3_21 */
		>;
	};
};

&gpio_keys {
		label = "gpio keys";

		factory_reset {
			label = "Factory_Reset";
			linux,code = <87>; /* F11 key */
			gpios = <&gpio3 19 GPIO_ACTIVE_LOW>; // pin 35 on AM_CON-LCD header
			debounce-interval = <50>;
		};
};

&am33xx_pinmux {
  pinctrl-0 = <&gpio3_pins>;
	gpio3_pins: pinmux_gpio3_pins {
		pinctrl-single,pins = <
      0x1e4 (PIN_INPUT_PULLUP | MUX_MODE7) /* (C13) emu0.gpio3_19 */
			/*0x1e4 (PIN_INPUT_PULLUP | MUX_MODE7) /* (C14) emu0.gpio3_7 */
			/*0x1e8 (PIN_INPUT_PULLUP | MUX_MODE7) /* (B14) emu1.gpio3_8 */
		>;
  };
};


&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
	status = "okay";
};
&am33xx_pinmux {
  uart0_pins: uart0_pins_default {
		pinctrl-single,pins = <
			0x170 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
			0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart0_txd.uart0_txd */
		>;
	};
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	status = "okay";
};
&am33xx_pinmux {
  uart1_pins: pinmux_uart1_pins {
		pinctrl-single,pins = <
		  0x180 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart1_rxd.uart1_rxd */
			0x184 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart1_txd.uart1_txd */
		>;
	};
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins>;
	status = "disabled";
};
&am33xx_pinmux {
	uart4_pins: pinmux_uart4_pins {
		pinctrl-single,pins = <
			0x168 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (E18) uart0_ctsn.uart4_rxd */
			0x16c ( PIN_OUTPUT | MUX_MODE1 ) /* (E17) uart0_rtsn.uart4_txd */
		>;
	};
};

&mmc1 {
	status = "okay";
	bus-width = <0x4>;
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;
	cd-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
	cd-inverted;
	vmmc-supply = <&dummy_reg>;
};
&am33xx_pinmux {
  mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			0x160 (PIN_INPUT | MUX_MODE7) /* spi0_cs1.gpio0_6 */
			/*
			AM33XX_PADCONF(AM335X_PIN_MMC0_DAT0, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_DAT1, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_DAT2, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_DAT3, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_CMD, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_CLK, PIN_INPUT_PULLUP, MUX_MODE0)
			*/
		>;
	};
};

&mac {
	pinctrl-names = "default";
	pinctrl-0 = <&cpsw1_pins>; /*, <&cpsw2_pins>; */
	status = "okay";
	/* dual_emac = <1>; */
  slaves = <1>;
};
&am33xx_pinmux {
	cpsw1_pins: pinmux_cpsw1 {
		pinctrl-single,pins = <
		  0x114 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txen.rgmii1_tctl */
			0x118 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxdv.rgmii1_rctl */
			0x11c (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txd3.rgmii1_td3 */
			0x120 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txd2.rgmii1_td2 */
			0x124 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txd1.rgmii1_td1 */
			0x128 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txd0.rgmii1_td0 */
			0x12c (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txclk.rgmii1_tclk */
			0x130 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxclk.rgmii1_rclk */
			0x134 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxd3.rgmii1_rd3 */
			0x138 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxd2.rgmii1_rd2 */
			0x13c (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxd1.rgmii1_rd1 */
			0x140 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxd0.rgmii1_rd0 */
     
			/* AM33XX_PADCONF(AM335X_PIN_MII1_COL, PIN_INPUT, MUX_MODE0)	/* (H16) mii1_col.gpio3_0 */
			/* AM33XX_PADCONF(AM335X_PIN_MII1_CRS, PIN_INPUT, MUX_MODE0)	/* (H17) gmii1_crs.gmii1_crs */
			/* AM33XX_PADCONF(AM335X_PIN_MII1_RX_ER, PIN_INPUT_PULLUP, MUX_MODE0)	/* (J15) gmii1_rxer.gmii1_rxer */
			/* AM33XX_PADCONF(AM335X_PIN_RMII1_REF_CLK, PIN_INPUT_PULLUP, MUX_MODE7)	/* rmii2_refclk.gpio0_29 */
		>;
	};
};

&davinci_mdio {
	pinctrl-names = "default";
	pinctrl-0 = <&davinci_mdio_default>;
	status = "okay";

	ethphy0: ethernet-phy@0 {
		reg = <0>;
	};
};
&am33xx_pinmux {
  davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			0x148 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0)	/* mdio_data.mdio_data */
			0x14c (PIN_OUTPUT_PULLUP | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};
};

&cpsw_emac0 {
	phy-handle = <&ethphy0>;
	phy-mode = "mii";
};

&sham {
	status = "okay";
};

&aes {
	status = "okay";
};

